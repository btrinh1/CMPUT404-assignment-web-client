#!/usr/bin/env python
# coding: utf-8
# Copyright 2013 Abram Hindle
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Do not use urllib's HTTP GET and POST mechanisms.
# Write your own HTTP GET and POST
# The point is to understand what you have to send and get experience with it

import sys
import socket
import re
# you may use urllib to encode data appropriately
import urllib
import urlparse

def help():
    print "httpclient.py [GET/POST] [URL]\n"

class HTTPRequest(object):
    def __init__(self, code=200, body=""):
        self.code = code
        self.body = body

class HTTPClient(object):
    def get_host_port(self,url):

    def connect(self, host, port):
        # use sockets! port 8080 by default
        if port == None:
            port = 8080
        #connect the client socket
        socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        socket.connect((host, port))
        return socket

    def get_code(self, data):
        return None

    def get_headers(self,data):
        return None

    def get_body(self, data):
        return None

    # read everything from the socket
    def recvall(self, sock):
        buffer = bytearray()
        done = False
        while not done:
            part = sock.recv(1024)
            if (part):
                buffer.extend(part)
            else:
                done = not part
        return str(buffer)

    def GET(self, url, args=None):
        print 'inget'
        code = 500
        body = ""
         # 0 is the Host, 1 is the Port, and 2 is the Path
        data = self.get_host_port(url)
        self.connect(data[0], data[1])
        if(args != None):
            args = urllib.urlencode(args)
            data[2] = data[2] + "?" + args
        
        request = "GET " + data[2] + 
                  " HTTP/1.1\r\nHost: "+data[0]+":"+str(data[1])+
                  "\r\nConnection: keep-alive\r\nContent-Type: text/html\r\n"
        request += "\r\n"
        print "GET REQUEST IS HERE"
        print request
        self.client_socket.send(request)
        body = self.recvall(self.client_socket)
        print "GET BODY IS HERE"
        print body
        code = self.get_code(body)
        return HTTPRequest(code, body)

    def POST(self, url, args=None):
        print 'inpost'
        code = 500
        body = ""
        return HTTPRequest(code, body)

    def command(self, url, command="GET", args=None):
        if (command == "POST"):
            print 'is post'
            return self.POST( url, args )
        else:
            print 'is get'
            return self.GET( url, args )
    
if __name__ == "__main__":
    client = HTTPClient()
    command = "GET"
    if (len(sys.argv) <= 1):
        print 'len <=1'
        help()
        sys.exit(1)
    elif (len(sys.argv) == 3):
        print 'ELSIF'
        print client.command( sys.argv[1], sys.argv[2] )
    else:
        print 'ELSE'
        print client.command( command, sys.argv[1] )    
